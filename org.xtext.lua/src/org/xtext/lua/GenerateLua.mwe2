module org.xtext.lua.GenerateLua

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.xtext.lua.postprocessing.*

var rootPath = ".."

Workflow {
	
	//component = XtextGenerator { //TODO: currently, we need a first pass with the XtextGenerator to create the model, then a second one with the extended generator to add the extra attributes
	component = ExtendedXtextGenerator { // use extended generator to add EAttributes after parsing
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.xtext.lua"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "org.xtext.lua.Lua"
			fileExtensions = "lua"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}
